using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;
using Elmah;
using System.Web.Security;

namespace Hcrp.CarroUrgenciaPsicoativo.Apresentacao
{
    public partial class login : Hcrp.CarroUrgenciaPsicoativo.BLL.FrameworkAplicacao.CarroUrgenciaPsicoativoPage
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                Conectar(); // Comentar esta linha caso o sistema faça Login Manual
                //Response.Write("teste");
            }
        }

        protected void bt_limpar_Click(object sender, EventArgs e)
        {
            txt_login.Text = string.Empty;
            txt_senha.Text = string.Empty;
        }

        protected void Conectar()
        {
            try
            {
                //Este trecho será utilizado quando a autenticação for realizada através de uma integração com outra aplicação
                //Exemplo "Menu dos Sistemas HCRP"

                Hcrp.Framework.Classes.ConfiguracaoSistema Config_integra = new Framework.Classes.ConfiguracaoSistema();
                Config_integra.Login = "INTEGRAAPLICATIVO";
                Config_integra.Senha = "C!@0322";
                Config_integra.GerarConexaoUsuario();

                //Hcrp.Infra.AcessoDado.Contexto.limpar();


                Hcrp.Infra.Util.QueryStringSegura _queryString = new Hcrp.Infra.Util.QueryStringSegura();

                string chaveDeParametro = string.Empty;
                Framework.Classes.IntegraAplicativo _integra = null;


                try
                {
                    chaveDeParametro = Hcrp.Framework.Infra.Util.Util.CryptHCOracle("D", Request.QueryString["guid"]).ToUpper(); //query.ObterOValorDoParametro("guid");
                }
                catch (Exception e)
                {
                }

                Hcrp.Framework.Classes.ConfiguracaoSistema Config = new Framework.Classes.ConfiguracaoSistema();

                //if (!string.IsNullOrWhiteSpace(chaveDeParametro))
                //{
                    _integra = new Framework.Classes.IntegraAplicativo(chaveDeParametro, true);


                    Config.Login = _integra.Login.ToUpper().Trim(); //txt_login.Text.ToUpper().Trim(); //
                    Config.Senha = _integra.Senha.ToUpper().Trim(); //txt_senha.Text.ToUpper().Trim(); //
                //}
                //else
                //{
                //    Config.Login = txt_login.Text.ToUpper().Trim();
                //    Config.Senha = txt_senha.Text.ToUpper().Trim();
                //}

                Config.CodSistema = Hcrp.CarroUrgenciaPsicoativo.BLL.Parametrizacao.Instancia().CodigoDoSistema; //numero do sistema

                if (!Config.GerarConexaoUsuario())
                {
                    throw new Exception("Erro ao Conectar o Usuário.<br />Verifique se as credenciais foram informadas corretamente.");
                }
                else
                {
                    this.Session["LoginUsuarioBancoLogadoG"] = Config.Login;
                    this.Session["SenhaUsuarioBancoLogadoG"] = Config.Senha;

                    NumeroUsuarioBancoLogado = Convert.ToInt32(Session["numuserbanco"]);

                    this.CarregarOTipoDeUsuarioLogado();

                    string userData = this.NumeroUsuarioBancoLogado.ToString() + "&" + " 189 " + "&" +
                                  DateTime.Now.ToString("yyyyMMddhhmm");

                    //FormsAuthentication.Initialize();
                    //var fat = new FormsAuthenticationTicket(1, Config.Login, DateTime.Now, DateTime.Now.AddMinutes(40), false, userData, FormsAuthentication.FormsCookiePath);
                    //Response.Cookies.Add(new HttpCookie(FormsAuthentication.FormsCookieName, FormsAuthentication.Encrypt(fat)));

                    //create a cookie
                    HttpCookie myCookie = new HttpCookie("CookieLog");

                    //Add key-values in the cookie
                    myCookie.Values.Add("NumeroUsuario", NumeroUsuarioBancoLogado.ToString());
                    myCookie.Values.Add("Login", Config.Login);
                    myCookie.Values.Add("TipoUsuario", TipoUsuarioLogado[0].Nome);
                    myCookie.Expires = DateTime.Now.AddHours(8);
                    Response.Cookies.Add(myCookie);

                    Response.Redirect("~/Menu.aspx",false);
                }

            }
            catch (Exception err)
            {
                ExibirMensagem(TipoMensagem.Erro, err.Message.Replace("'",""));
                ErrorSignal.FromCurrentContext().Raise(err);
            }

        }       

        protected void bt_Conectar_Click(object sender, EventArgs e)
        {
            if (txt_login.Text.Length > 0 && txt_senha.Text.Length > 0)
            {
                Conectar();
            }
           
        }

        /// <summary>
        /// Carregar o tipo de usuário oncologia logado.
        /// </summary>
        protected void CarregarOTipoDeUsuarioLogado()
        {
            try
            {
                this.Session["TipoUsuarioLogado"] = null;

                if (NumeroUsuarioBancoLogado != 0)
                {
                    List<Entity.Perfil> perfil = null;

                    perfil = new BLL.Perfil().ObterOPerfilDoUsuarioLogado();

                    if (perfil != null && perfil.Count > 0)
                    {
                        TipoUsuarioLogado = perfil;
                    }
                }
            }
            catch (Exception)
            {
                throw;
            }
        }

        [WebMethod]
        public static string RetornaData()
        {
            return DateTime.Now.ToString();
        }
    }
}